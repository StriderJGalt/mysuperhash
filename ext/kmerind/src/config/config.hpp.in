/*
 * Copyright 2015 Georgia Institute of Technology
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
file comment
*/

#ifndef CONFIG_H
#define CONFIG_H

#ifndef __cplusplus
#error A C++ compiler is required!
#endif

// CMakeLists.txt conditionally sets MPI_DEFINE
@MPI_DEFINE@

// CMakeLists.txt conditionally sets OPENMP_DEFINE
@OPENMP_DEFINE@
@OPENMP_DEFAULT_SCOPE@

// source location
#define PROJ_SRC_DIR "@PROJECT_SOURCE_DIR@"

// binary location
#define PROJ_BIN_DIR "@PROJECT_BINARY_DIR@"

// OpenMP pragma "default(none)" clause, for debugging use.
#if (defined(OMP_DEBUG) && !defined(__clang__))
#define OMP_SHARE_DEFAULT default(none)
#else
#define OMP_SHARE_DEFAULT
#endif


#define BLISS_UNUSED(x) do { (void)(x); } while(0)
// gcc before 4.8.1 doesn't have alignas, and can use form below, but gcc needs decltype from 4.8.1 anyways.
#if defined(__ICC) && (__ICC < 15)
#define BLISS_ALIGNED_ARRAY(name, count, alignsize) name[count] __attribute__((aligned(alignsize)))
#define BLISS_ALIGNED_VAR(name, alignsize)  name __attribute__((aligned(alignsize)))
#else 
#define BLISS_ALIGNED_ARRAY(name, count, alignsize) name alignas(alignsize) [count]
#define BLISS_ALIGNED_VAR(name, alignsize) name alignas(alignsize)
#endif 


#endif /* CONFIG_H */
